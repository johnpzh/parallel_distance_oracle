Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into pado.cpp(110,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedVertexCentricPLL::switch_labels_to_old_id(PADO::WeightedVertexCentricPLL *, const std::vector<PADO::idi, std::allocator<PADO::idi>> &, const std::vector<PADO::idi, std::allocator<PADO::idi>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/pado_weighted.20190122.labels_correction.h(1260,47)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(1261,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(1266,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/pado_weighted.20190122.labels_correction.h(1270,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between *__cur (75:42) and *__first._M_current (75:42)
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/pado_weighted.20190122.labels_correction.h(1270,17)
      <Remainder>
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/pado_weighted.20190122.labels_correction.h(1270,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between *__cur (75:42) and *__first._M_current (75:42)
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/pado_weighted.20190122.labels_correction.h(1270,17)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/pado_weighted.20190122.labels_correction.h(1298,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>, std::allocator<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>>>::~vector(std::vector<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>, std::allocator<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into /usr/include/c++/7.3.0/bits/stl_vector.h(435,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedVertexCentricPLL::~WeightedVertexCentricPLL(PADO::WeightedVertexCentricPLL *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/pado_weighted.20190122.labels_correction.h(42,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->distances (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedVertexCentricPLL::construct(PADO::WeightedVertexCentricPLL *, const PADO::WeightedGraph &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/pado_weighted.20190122.labels_correction.h(1135,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between call:memset(void *, int, size_t) (75:7) and call:std::vector<PADO::weighti, std::allocator<PADO::weighti>>:: (44:9)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/pado_weighted.20190122.labels_correction.h(1135,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between call:memset(void *, int, size_t) (75:7) and call:std::vector<PADO::weighti, std::allocator<PADO::weighti>>:: (44:9)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/pado_weighted.20190122.labels_correction.h(1135,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/pado_weighted.20190122.labels_correction.h(1135,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/pado_weighted.20190122.labels_correction.h(1135,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1140,34)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1140,34)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1140,34)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1140,34)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1144,36)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1144,36)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1144,36)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1144,36)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1160,42)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1160,42)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1160,42)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(1160,42)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(1165,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedVertexCentricPLL::vertex_centric_labeling_in_batches(PADO::WeightedVertexCentricPLL *, const PADO::WeightedGraph &, PADO::idi, PADO::idi, PADO::inti, std::vector<PADO::WeightedVertexCentricPLL::IndexType, std::allocator<PADO::WeightedVertexCentricPLL::IndexType>> &, std::vector<PADO::idi, std::allocator<PADO::idi>> &, PADO::idi, std::vector<bool, std::allocator<bool>> &, std::vector<PADO::idi, std::allocator<PADO::idi>> &, PADO::idi, std::vector<bool, std::allocator<bool>> &, std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>> &, std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>> &, std::vector<PADO::idi, std::allocator<PADO::idi>> &, PADO::idi, std::vector<bool, std::allocator<bool>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(234,3) inlined into includes/pado_weighted.20190122.labels_correction.h(949,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between dists_table->_M_start (242:27) and ((dists_table->_M_start+r_root_id*24)->_M_start)[r_real_id] (245:26)

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(241,4) inlined into includes/pado_weighted.20190122.labels_correction.h(949,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between dists_table->_M_start (242:27) and ((dists_table->_M_start+r_root_id*24)->_M_start)[*(Lr->_M_start+ (242:27)
   LOOP END

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(241,4) inlined into includes/pado_weighted.20190122.labels_correction.h(949,2)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(252,3) inlined into includes/pado_weighted.20190122.labels_correction.h(949,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between short_index->_M_start->end_vertices_que[r_real_id] (256:22) and SI_r->_M_start[SI_r->end_last_new_roots] (258:23)
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(267,3) inlined into includes/pado_weighted.20190122.labels_correction.h(949,2)
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(275,3) inlined into includes/pado_weighted.20190122.labels_correction.h(949,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this[__n] (87:3) and this[__n] (87:3)
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(275,3) inlined into includes/pado_weighted.20190122.labels_correction.h(949,2)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_bvector.h(858,24) inlined into includes/pado_weighted.20190122.labels_correction.h(973,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(970,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between active_queue->_M_start (971:29) and ((dists_table->_M_start+r_root_id*24)->_M_start)[v_tail] (325:27)

      LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(298,2) inlined into includes/pado_weighted.20190122.labels_correction.h(975,4)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ includes/pado_weighted.20190122.labels_correction.h(298,47) ]

         LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(308,3) inlined into includes/pado_weighted.20190122.labels_correction.h(975,4)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between SI_v_head->_M_start (309:44) and ((dists_table->_M_start+r_root_id*24)->_M_start)[v_tail] (325:27)
         LOOP END

         LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(308,3) inlined into includes/pado_weighted.20190122.labels_correction.h(975,4)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(992,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between has_cand_queue->_M_start (993:29) and ((dists_table->_M_start+cand_root_id*24)->_M_start)[v_id] (1025:31)

      LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(998,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between SI_v->_M_start (999:44) and ((dists_table->_M_start+cand_root_id*24)->_M_start)[v_id] (1025:31)
      LOOP END
   LOOP END

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(1053,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between has_cand_queue->_M_start[i_queue] (1054:29) and SI_v->end_candidates_que (1079:4)

      LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(1075,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between SI_v->_M_start (1077:26) and SI_v->_M_start[*(SI_v->_M_start+cand_i*4)] (1077:26)
      LOOP END

      LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(1075,4)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(862,2) inlined into includes/pado_weighted.20190122.labels_correction.h(1088,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between SI_v->end_vertices_que (866:24) and *(dist_v_r+c_root_id) (895:25)

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(868,3) inlined into includes/pado_weighted.20190122.labels_correction.h(1088,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between SI_v->_M_start (870:42) and *(dist_v_r+c_root_id) (895:25)

      LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(876,4) inlined into includes/pado_weighted.20190122.labels_correction.h(1088,2)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between SI_v->_M_start (885:43) and *(dist_v_r+c_root_id) (895:25)
      LOOP END

      LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(876,4) inlined into includes/pado_weighted.20190122.labels_correction.h(1088,2)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(741,2) inlined into includes/pado_weighted.20190122.labels_correction.h(1095,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between dists_table->_M_start (747:27) and ((dists_table->_M_start+r_roots_id*24)->_M_start)[r_real_id] (749:26)

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(746,3) inlined into includes/pado_weighted.20190122.labels_correction.h(1095,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between dists_table->_M_start (747:27) and ((dists_table->_M_start+r_roots_id*24)->_M_start)[*(Lr->_M_start (747:27)
   LOOP END

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(746,3) inlined into includes/pado_weighted.20190122.labels_correction.h(1095,2)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(753,2) inlined into includes/pado_weighted.20190122.labels_correction.h(1095,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between SI_v->end_reached_roots_que (757:20) and SI_v->end_reached_roots_que (761:3)

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(758,3) inlined into includes/pado_weighted.20190122.labels_correction.h(1095,2)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between dists_table->_M_start (759:44) and ((dists_table->_M_start+(*(SI_v->_M_start+i_r*4))*24)->_M_start) (759:44)
   LOOP END
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(776,2) inlined into includes/pado_weighted.20190122.labels_correction.h(1105,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(782,3) inlined into includes/pado_weighted.20190122.labels_correction.h(1105,2)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /usr/include/c++/7.3.0/bits/stl_vector.h(1500,4) ]
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedVertexCentricPLL::distance_query(PADO::WeightedVertexCentricPLL *, PADO::idi, PADO::idi, const std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>> &, const std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>> &, const std::vector<PADO::WeightedVertexCentricPLL::IndexType, std::allocator<PADO::WeightedVertexCentricPLL::IndexType>> &, PADO::idi, PADO::weighti)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(365,2)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ includes/pado_weighted.20190122.labels_correction.h(395,4) ]
LOOP END

LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(451,2)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ includes/pado_weighted.20190122.labels_correction.h(481,6) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>>::vector(std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>> *, std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>>::size_type, const std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>>::value_type &, const std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(209,8) inlined into /usr/include/c++/7.3.0/bits/stl_vector.h(299,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/7.3.0/bits/stl_construct.h(75,42) ]
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedVertexCentricPLL::ShortIndex::ShortIndex(PADO::WeightedVertexCentricPLL::ShortIndex *, PADO::idi)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(76,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(76,19)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(76,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(76,19)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(76,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(76,19)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(76,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(76,19)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(78,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(78,19)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(78,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(78,19)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(78,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(78,19)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(78,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(78,19)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(79,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(79,17)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(79,17)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(79,17)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(79,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(79,17)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(79,17)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(79,17)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(81,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(81,22)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(81,22)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(81,22)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(81,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(81,22)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(81,22)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/pado_weighted.20190122.labels_correction.h(81,22)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>>::vector(std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>> *, std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>>::size_type, const std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>>::value_type &, const std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(209,8) inlined into /usr/include/c++/7.3.0/bits/stl_vector.h(299,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ includes/pado_weighted.20190122.labels_correction.h(50,9) ]
LOOP END
===========================================================================

Begin optimization report for: std::vector<bool, std::allocator<bool>>::vector(std::vector<bool, std::allocator<bool>> *, std::vector<bool, std::allocator<bool>>::size_type, const bool &, const std::vector<bool, std::allocator<bool>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/7.3.0/bits/stl_bvector.h(599,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/7.3.0/bits/stl_bvector.h(599,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(695,7) inlined into /usr/include/c++/7.3.0/bits/stl_bvector.h(599,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::vector<PADO::WeightedVertexCentricPLL::IndexType, std::allocator<PADO::WeightedVertexCentricPLL::IndexType>>::~vector(std::vector<PADO::WeightedVertexCentricPLL::IndexType, std::allocator<PADO::WeightedVertexCentricPLL::IndexType>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into /usr/include/c++/7.3.0/bits/stl_vector.h(435,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedGraph::id_transfer(std::vector<PADO::idi, std::allocator<PADO::idi>> *, PADO::WeightedGraph *, const std::vector<PADO::idi, std::allocator<PADO::idi>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/graph.h(365,51)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at includes/graph.h(365,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at includes/graph.h(369,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(373,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between *__cur (75:42) and *__first._M_current (75:42)
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(373,21)
      <Remainder>
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(373,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between *__cur (75:42) and *__first._M_current (75:42)
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(373,21)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at includes/graph.h(376,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1866,53) inlined into includes/graph.h(379,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __val (1825:10) and __val.second (1828:21)

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1828,7) inlined into includes/graph.h(379,3)
         remark #15523: loop was not vectorized: loop control variable __next.current.current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at includes/graph.h(381,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between this->out_edges (382:4) and this->out_weights[loc+ei] (384:4)
   LOOP END

   LOOP BEGIN at includes/graph.h(381,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(390,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(390,22)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(390,22)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(390,22)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at includes/graph.h(390,2)
   remark #15523: loop was not vectorized: loop control variable v was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/graph.h(394,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: std::__insertion_sort<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator *, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1845,57)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Multiversioned v1, Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Remainder, Multiversioned v1, Distributed chunk1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Multiversioned v1, Distributed chunk2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Remainder, Multiversioned v1, Distributed chunk2>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Multiversioned v2, Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Remainder, Multiversioned v2, Distributed chunk1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Multiversioned v2, Distributed chunk2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Remainder, Multiversioned v2, Distributed chunk2>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1828,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1856,6)
      remark #15523: loop was not vectorized: loop control variable __next.current.current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__introsort_loop<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator, long, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator *, long, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_iterator.h(171,9) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1954,6)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1902,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1954,6)
      remark #15523: loop was not vectorized: loop control variable U24f_V.U24f_V.U24f_V was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1905,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1954,6)
      remark #15523: loop was not vectorized: loop control variable U250_V.U250_V.U250_V was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(346,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1673,54) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between $i1->first (450:26) and call:std::__adjust_heap<std::vector<std::pair<PADO::idi, PADO::w (253:7)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(405,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
   remark #15523: loop was not vectorized: loop control variable U231_V.U231_V.U231_V was found, but loop iteration count cannot be computed before executing the loop
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1944,7)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::__adjust_heap<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator, std::__void_t<>>::difference_type, std::remove_reference<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::value_type &>::type, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator *, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator, std::__void_t<>>::difference_type, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::reverse_iterator, std::__void_t<>>::difference_type, std::remove_reference<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>::value_type &>::type, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(219,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(133,69) inlined into /usr/include/c++/7.3.0/bits/stl_heap.h(238,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedGraph::make_rank(std::vector<PADO::idi, std::allocator<PADO::idi>> *, PADO::WeightedGraph *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(349,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(350,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(350,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(350,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(350,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_tempbuf.h(92,7) inlined into includes/graph.h(352,2)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_tempbuf.h(198,8) inlined into includes/graph.h(352,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __prev->first (75:42)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_tempbuf.h(198,8) inlined into includes/graph.h(352,2)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(353,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(353,19)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(353,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(353,19)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at includes/graph.h(353,2)
   remark #15523: loop was not vectorized: loop control variable r was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: std::__merge_sort_with_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::_Temporary_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::value_type>::iterator, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::_Temporary_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::value_type>::iterator, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2693,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2717,7)
   remark #15523: loop was not vectorized: loop control variable U14e_V.U14e_V.U14e_V was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_iterator.h(139,17) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,27)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2672,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,4)
      remark #15523: loop was not vectorized: loop control variable U150_V.U150_V.U150_V was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2643,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,4)
      remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __result->second (392:2) and (U16d_V.U16d_V-8)->second (392:2)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,4)
   <Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,4)
   <Remainder, Distributed chunk1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,4)
   <Distributed chunk2>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __result->second (392:2) and (U16d_V.U16d_V-8)->second (392:2)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2721,4)
   <Remainder, Distributed chunk2>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2672,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2643,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
         remark #15523: loop was not vectorized: loop control variable U173_V.U173_V.U173_V was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between (U17a_V.U17a_V-8)->second (392:2) and __first->second (392:2)
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between (U17a_V.U17a_V-8)->second (392:2) and __first->second (392:2)
      LOOP END

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2643,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
      remark #15523: loop was not vectorized: loop control variable U171_V.U171_V.U171_V was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between (U17a_V.U17a_V-8)->second (392:2) and __first->second (392:2)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between (U17a_V.U17a_V-8)->second (392:2) and __first->second (392:2)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2724,4)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__move_merge<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::_Temporary_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::value_type>::iterator, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::_Temporary_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::value_type>::iterator, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_iterator.h(155,16) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2644,46)
   remark #15523: loop was not vectorized: loop control variable __result was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2658,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __result->first (391:2) and (U16d_V.U16d_V-8)->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2658,14)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2658,14)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __result->first (391:2) and (U16d_V.U16d_V-8)->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2658,14)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::__insertion_sort<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1845,57)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Multiversioned v1>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Remainder loop for vectorization, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1828,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1856,6)
      remark #15523: loop was not vectorized: loop control variable __next.current.current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__merge_adaptive<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::difference_type, std::_Temporary_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::value_type>::iterator, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::difference_type, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::difference_type, std::_Temporary_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::value_type>::iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::difference_type, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2425,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __result->first (391:2) and (U16d_V.U16d_V-8)->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2425,28)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2308,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2426,4)
   remark #15523: loop was not vectorized: loop control variable U17d_V.U17d_V.U17d_V was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2426,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between (U17a_V.U17a_V-8)->first (391:2) and __first->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2426,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2431,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __result->first (391:2) and (U16d_V.U16d_V-8)->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2431,28)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2432,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between (U199_V.U199_V-8)->first (391:2) and __last->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2432,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2432,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between (U199_V.U199_V-8)->first (391:2) and __last->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2432,4)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(954,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2446,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2047,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2455,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_iterator.h(802,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2432,4)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::__rotate_adaptive<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::_Temporary_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::value_type>::iterator, long>(std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, long, long, std::_Temporary_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__iterator_traits<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, std::__void_t<>>::value_type>::iterator, long)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2386,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __result->first (391:2) and (U16d_V.U16d_V-8)->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2386,23)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2387,8)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2387,8)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2387,8)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2387,8)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2388,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between (U17a_V.U17a_V-8)->first (391:2) and __first->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2388,15)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(176,23) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2406,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *__a (198:19) and *__b (200:7)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_iterator.h(139,17) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2406,4)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1371,8) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2406,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *__a (198:19) and *__b (200:7)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1395,8) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2406,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *__a (198:19) and *__b (200:7)
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2397,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __result->first (391:2) and (U16d_V.U16d_V-8)->first (391:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2397,23)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2398,8)
<Multiversioned v1>
   remark #15301: REVERSED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2398,8)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2398,8)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(341,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2398,8)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2399,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between (U199_V.U199_V-8)->second (392:2) and Ue2_V->second (392:2)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2399,15)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: std::__inplace_stable_sort<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1845,57) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2767,4)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2767,4)
   <Multiversioned v1>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2767,4)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2767,4)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2767,4)
   <Remainder loop for vectorization, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1828,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2767,4)
      remark #15523: loop was not vectorized: loop control variable __next.current.current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__merge_without_buffer<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator, __gnu_cxx::__normal_iterator<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::pointer, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>>::difference_type, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::reverse_iterator *, __gnu_cxx::__normal_iterator<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::pointer, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>>::difference_type, __gnu_cxx::__normal_iterator<std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>::pointer, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>>>::difference_type, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(954,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2502,8)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(2047,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2511,8)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(176,23) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2516,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *__a (198:19) and *__b (200:7)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_iterator.h(139,17) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2516,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1371,8) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2516,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *__a (198:19) and *__b (200:7)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1395,8) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(2516,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *__a (198:19) and *__b (200:7)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedGraph::WeightedGraph(PADO::WeightedGraph *, const char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(269,16)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at includes/graph.h(286,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(292,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(292,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(292,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(292,13)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedGraph::construct(PADO::WeightedGraph *, const std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>> &, const std::vector<PADO::weighti, std::allocator<PADO::weighti>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(311,25)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U2bc_V.U2bc_V->first (312:3) and this->num_v (312:3)
LOOP END

LOOP BEGIN at includes/graph.h(311,25)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/graph.h(321,33)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/graph.h(322,40)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at includes/graph.h(323,25)
   remark #15523: loop was not vectorized: loop control variable U2c0_V.U2c0_V was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at includes/graph.h(332,2)
   remark #15523: loop was not vectorized: loop control variable head was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at includes/graph.h(336,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between this->out_edges (337:4) and this->out_weights[loc+ei] (338:4)
   LOOP END

   LOOP BEGIN at includes/graph.h(336,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/graph.h(342,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/graph.h(342,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<PADO::idi, std::allocator<PADO::idi>>, std::allocator<std::vector<PADO::idi, std::allocator<PADO::idi>>>>::~vector(std::vector<std::vector<PADO::idi, std::allocator<PADO::idi>>, std::allocator<std::vector<PADO::idi, std::allocator<PADO::idi>>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into /usr/include/c++/7.3.0/bits/stl_vector.h(435,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>>::~vector(std::vector<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into /usr/include/c++/7.3.0/bits/stl_vector.h(435,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: pado(const char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into pado.cpp(44,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>>::~vector(std::vector<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into /usr/include/c++/7.3.0/bits/stl_vector.h(435,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<PADO::idi, std::allocator<PADO::idi>>, std::allocator<std::vector<PADO::idi, std::allocator<PADO::idi>>>>::pointer>(std::_Vector_base<std::vector<PADO::idi, std::allocator<PADO::idi>>, std::allocator<std::vector<PADO::idi, std::allocator<PADO::idi>>>>::pointer, std::_Vector_base<std::vector<PADO::idi, std::allocator<PADO::idi>>, std::allocator<std::vector<PADO::idi, std::allocator<PADO::idi>>>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>>::pointer>(std::_Vector_base<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>>::pointer, std::_Vector_base<std::vector<PADO::weighti, std::allocator<PADO::weighti>>, std::allocator<std::vector<PADO::weighti, std::allocator<PADO::weighti>>>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>, std::allocator<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>>>::pointer>(std::_Vector_base<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>, std::allocator<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>>>::pointer, std::_Vector_base<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>, std::allocator<std::vector<std::pair<PADO::idi, PADO::weighti>, std::allocator<std::pair<PADO::idi, PADO::weighti>>>>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<PADO::WeightedVertexCentricPLL::IndexType, std::allocator<PADO::WeightedVertexCentricPLL::IndexType>>::pointer>(std::_Vector_base<PADO::WeightedVertexCentricPLL::IndexType, std::allocator<PADO::WeightedVertexCentricPLL::IndexType>>::pointer, std::_Vector_base<PADO::WeightedVertexCentricPLL::IndexType, std::allocator<PADO::WeightedVertexCentricPLL::IndexType>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>>::pointer>(std::_Vector_base<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>>::pointer, std::_Vector_base<PADO::WeightedVertexCentricPLL::ShortIndex, std::allocator<PADO::WeightedVertexCentricPLL::ShortIndex>>::pointer)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (162:9) and call:operator delete(void *) (125:2)
LOOP END
===========================================================================

Begin optimization report for: PADO::Graph::Graph(PADO::Graph *, const char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(107,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(113,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(113,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(113,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(113,13)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PADO::Graph::construct(PADO::Graph *, const std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(127,25)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U2a8_V.U2a8_V->first (128:3) and this->num_v (128:3)
LOOP END

LOOP BEGIN at includes/graph.h(127,25)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/graph.h(136,33)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at includes/graph.h(136,25)
   remark #15523: loop was not vectorized: loop control variable U2ac_V.U2ac_V was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at includes/graph.h(142,2)
   remark #15523: loop was not vectorized: loop control variable head was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at includes/graph.h(146,3)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at includes/graph.h(146,3)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at includes/graph.h(146,3)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/graph.h(151,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: PADO::Graph::Graph(PADO::Graph *const, const char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(107,3) inlined into includes/graph.h(94,8)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(94,8)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(94,8)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(94,8)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(94,8)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PADO::Graph::Graph(PADO::Graph *, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(127,25) inlined into includes/graph.h(121,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U2a8_V.U2a8_V->first (128:3) and this->num_v (128:3)
LOOP END

LOOP BEGIN at includes/graph.h(127,25) inlined into includes/graph.h(121,2)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/graph.h(121,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at includes/graph.h(136,25) inlined into includes/graph.h(121,2)
   remark #15523: loop was not vectorized: loop control variable U2ac_V.U2ac_V was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at includes/graph.h(142,2) inlined into includes/graph.h(121,2)
   remark #15523: loop was not vectorized: loop control variable head was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at includes/graph.h(146,3) inlined into includes/graph.h(121,2)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at includes/graph.h(146,3) inlined into includes/graph.h(121,2)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at includes/graph.h(146,3) inlined into includes/graph.h(121,2)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/graph.h(121,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: PADO::Graph::Graph(PADO::Graph *const, std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(127,25) inlined into includes/graph.h(119,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U2a8_V.U2a8_V->first (128:3) and this->num_v (128:3)
LOOP END

LOOP BEGIN at includes/graph.h(127,25) inlined into includes/graph.h(119,8)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/graph.h(119,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at includes/graph.h(136,25) inlined into includes/graph.h(119,8)
   remark #15523: loop was not vectorized: loop control variable U2ac_V.U2ac_V was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at includes/graph.h(142,2) inlined into includes/graph.h(119,8)
   remark #15523: loop was not vectorized: loop control variable head was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at includes/graph.h(146,3) inlined into includes/graph.h(119,8)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at includes/graph.h(146,3) inlined into includes/graph.h(119,8)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at includes/graph.h(146,3) inlined into includes/graph.h(119,8)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/graph.h(119,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: PADO::Graph::make_rank(std::vector<PADO::idi, std::allocator<PADO::idi>> *, const PADO::Graph *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(157,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(159,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(159,13)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(159,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(159,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_tempbuf.h(92,7) inlined into includes/graph.h(161,2)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_tempbuf.h(198,8) inlined into includes/graph.h(161,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __prev->first (75:42)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_tempbuf.h(198,8) inlined into includes/graph.h(161,2)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(162,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(162,19)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(162,19)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(162,19)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at includes/graph.h(162,2)
   remark #15523: loop was not vectorized: loop control variable r was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: PADO::Graph::id_transfer(std::vector<PADO::idi, std::allocator<PADO::idi>> *, PADO::Graph *, const std::vector<PADO::idi, std::allocator<PADO::idi>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(526,8) inlined into includes/graph.h(172,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at includes/graph.h(172,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at includes/graph.h(176,3)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/7.3.0/ext/new_allocator.h(111,27) ]
   LOOP END
LOOP END

LOOP BEGIN at includes/graph.h(182,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1866,53) inlined into includes/graph.h(185,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *(__i.current.current-4) (1825:10) and *(U20c_V.U20c_V.U20c_V-4) (1834:7)

      LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1828,7) inlined into includes/graph.h(185,3)
         remark #15523: loop was not vectorized: loop control variable __next.current.current was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at includes/graph.h(187,3)
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at includes/graph.h(187,3)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      LOOP END

      LOOP BEGIN at includes/graph.h(187,3)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(194,22)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(194,22)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(194,22)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7) inlined into includes/graph.h(194,22)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at includes/graph.h(194,2)
   remark #15523: loop was not vectorized: loop control variable v was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_construct.h(107,4) inlined into includes/graph.h(198,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: std::__insertion_sort<std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator *, std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator *, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1845,57)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Multiversioned v1>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Peeled loop for vectorization, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Multiversioned v2>
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(547,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1852,8)
   <Remainder loop for vectorization, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1828,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1856,6)
      remark #15523: loop was not vectorized: loop control variable __next.current.current was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::__introsort_loop<std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator, long, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator *, std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator *, long, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_iterator.h(139,17) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1954,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1902,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1954,6)
      remark #15523: loop was not vectorized: loop control variable U1d2_V.U1d2_V.U1d2_V was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1905,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1954,6)
      remark #15523: loop was not vectorized: loop control variable U1d3_V.U1d3_V.U1d3_V was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(346,4) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1673,54) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(__i.current.current-4) (252:7) and U1aa_V.U1aa_V->_M_current[-1] (252:7)
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1673,54) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(405,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
   remark #15523: loop was not vectorized: loop control variable U1b4_V.U1b4_V.U1b4_V was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(219,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(133,7) inlined into /usr/include/c++/7.3.0/bits/stl_algo.h(1949,8)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algo.h(1944,7)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: std::__adjust_heap<std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator, std::__iterator_traits<std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator, std::__void_t<>>::difference_type, std::remove_reference<PADO::idi &>::type, __gnu_cxx::__ops::_Iter_less_iter>(std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator *, std::__iterator_traits<std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator, std::__void_t<>>::difference_type, std::__iterator_traits<std::vector<PADO::idi, std::allocator<PADO::idi>>::reverse_iterator, std::__void_t<>>::difference_type, std::remove_reference<PADO::idi &>::type, __gnu_cxx::__ops::_Iter_less_iter)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(219,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_heap.h(133,7) inlined into /usr/include/c++/7.3.0/bits/stl_heap.h(238,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: PADO::Graph::print(PADO::Graph *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(204,2)
   remark #15523: loop was not vectorized: loop control variable head was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at includes/graph.h(207,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedGraph::WeightedGraph(PADO::WeightedGraph *const, const char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(269,16) inlined into includes/graph.h(270,16)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at includes/graph.h(286,3) inlined into includes/graph.h(270,16)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(270,16)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(270,16)
   <Remainder>
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(270,16)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between __cur->first (75:42) and __first._M_current->first (75:42)
   LOOP END

   LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_uninitialized.h(82,23) inlined into includes/graph.h(270,16)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedGraph::WeightedGraph(PADO::WeightedGraph *, const std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>> &, const std::vector<PADO::weighti, std::allocator<PADO::weighti>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(298,16)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedGraph::WeightedGraph(PADO::WeightedGraph *const, const std::vector<std::pair<PADO::idi, PADO::idi>, std::allocator<std::pair<PADO::idi, PADO::idi>>> &, const std::vector<PADO::weighti, std::allocator<PADO::weighti>> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(298,16) inlined into includes/graph.h(299,16)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedGraph::print(PADO::WeightedGraph *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/graph.h(400,2)
   remark #15523: loop was not vectorized: loop control variable head was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at includes/graph.h(403,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedVertexCentricPLL::WeightedVertexCentricPLL(PADO::WeightedVertexCentricPLL *, const PADO::WeightedGraph &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(208,27)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: PADO::WeightedVertexCentricPLL::WeightedVertexCentricPLL(PADO::WeightedVertexCentricPLL *const, const PADO::WeightedGraph &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at includes/pado_weighted.20190122.labels_correction.h(208,27) inlined into includes/pado_weighted.20190122.labels_correction.h(209,27)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: std::__fill_a<std::_Bit_type *, int>(std::_Bit_type *, std::_Bit_type *, const int &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(695,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(695,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(695,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: std::__fill_n_a<std::_Vector_base<PADO::idi, std::allocator<PADO::idi>>::pointer, std::vector<PADO::idi, std::allocator<PADO::idi>>::size_type, std::iterator_traits<std::vector<PADO::idi, std::allocator<PADO::idi>>::pointer>::value_type>(std::_Vector_base<PADO::idi, std::allocator<PADO::idi>>::pointer, std::vector<PADO::idi, std::allocator<PADO::idi>>::size_type, const std::iterator_traits<std::vector<PADO::idi, std::allocator<PADO::idi>>::pointer>::value_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/7.3.0/bits/stl_algobase.h(752,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================
